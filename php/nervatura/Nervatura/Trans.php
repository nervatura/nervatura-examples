<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api.proto

namespace Nervatura;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *RequestUpdate Key->ID keys:
 *- ```id```: Trans *transnumber*
 *- ```transtype```: all groupvalue from Groups, where groupname equal transtype
 *- ```direction```: Valid values *in, out, transfer*
 *- ```customer_id```: Customer *custnumber*
 *- ```employee_id```: Employee *empnumber*
 *- ```department```: all groupvalue from Groups, where groupname equal department
 *- ```project_id```: Project *pronumber*
 *- ```place_id```: Place *planumber*
 *- ```paidtype```: all groupvalue from Groups, where groupname equal paidtype
 *- ```transtate```: all groupvalue from Groups, where groupname equal transtate
 *
 * Generated from protobuf message <code>nervatura.Trans</code>
 */
class Trans extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>int64 id = 1;</code>
     */
    protected $id = 0;
    /**
     * Unique ID. If you set it to numberdef, it will be generated at the first data save. The format and value of the next data in row is taken from the numberdef (numberkey = transnumber) data series.
     *
     * Generated from protobuf field <code>string transnumber = 2;</code>
     */
    protected $transnumber = '';
    /**
     * Reference to [Groups](#groups).id (only where groupname = 'transtype')[Groups](#groups).id
     *
     * Generated from protobuf field <code>int64 transtype = 3;</code>
     */
    protected $transtype = 0;
    /**
     * Reference to [Groups](#groups).id (only where groupname = 'direction')
     *
     * Generated from protobuf field <code>int64 direction = 4;</code>
     */
    protected $direction = 0;
    /**
     * Generated from protobuf field <code>string ref_transnumber = 5;</code>
     */
    protected $ref_transnumber = null;
    /**
     * Generated from protobuf field <code>string crdate = 6;</code>
     */
    protected $crdate = '';
    /**
     * Generated from protobuf field <code>string transdate = 7;</code>
     */
    protected $transdate = '';
    /**
     * Date-time
     *
     * Generated from protobuf field <code>string duedate = 8;</code>
     */
    protected $duedate = null;
    /**
     * Reference to [Customer](#customer).id
     *
     * Generated from protobuf field <code>int64 customer_id = 9;</code>
     */
    protected $customer_id = null;
    /**
     * Reference to [Employee](#employee).id
     *
     * Generated from protobuf field <code>int64 employee_id = 10;</code>
     */
    protected $employee_id = null;
    /**
     * Reference to [Groups](#groups).id (only where groupname = 'department')
     *
     * Generated from protobuf field <code>int64 department = 11;</code>
     */
    protected $department = null;
    /**
     * Reference to [Project](#project).id
     *
     * Generated from protobuf field <code>int64 project_id = 12;</code>
     */
    protected $project_id = null;
    /**
     * Reference to [Place](#place).id
     *
     * Generated from protobuf field <code>int64 place_id = 13;</code>
     */
    protected $place_id = null;
    /**
     * Reference to [Groups](#groups).id (only where groupname = 'paidtype')
     *
     * Generated from protobuf field <code>int64 paidtype = 14;</code>
     */
    protected $paidtype = null;
    /**
     * Generated from protobuf field <code>string curr = 15;</code>
     */
    protected $curr = null;
    /**
     * Generated from protobuf field <code>bool notax = 16;</code>
     */
    protected $notax = false;
    /**
     * Generated from protobuf field <code>bool paid = 17;</code>
     */
    protected $paid = false;
    /**
     * Generated from protobuf field <code>double acrate = 18;</code>
     */
    protected $acrate = 0.0;
    /**
     * Generated from protobuf field <code>string notes = 19;</code>
     */
    protected $notes = '';
    /**
     * Generated from protobuf field <code>string intnotes = 20;</code>
     */
    protected $intnotes = '';
    /**
     * Generated from protobuf field <code>string fnote = 21;</code>
     */
    protected $fnote = '';
    /**
     * Reference to [Groups](#groups).id (only where groupname = 'transtate')
     *
     * Generated from protobuf field <code>int64 transtate = 22;</code>
     */
    protected $transtate = 0;
    /**
     * Generated from protobuf field <code>bool closed = 23;</code>
     */
    protected $closed = false;
    /**
     * Trans meta data
     *
     * Generated from protobuf field <code>repeated .nervatura.MetaData metadata = 24;</code>
     */
    private $metadata;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $id
     *     @type string $transnumber
     *           Unique ID. If you set it to numberdef, it will be generated at the first data save. The format and value of the next data in row is taken from the numberdef (numberkey = transnumber) data series.
     *     @type int|string $transtype
     *           Reference to [Groups](#groups).id (only where groupname = 'transtype')[Groups](#groups).id
     *     @type int|string $direction
     *           Reference to [Groups](#groups).id (only where groupname = 'direction')
     *     @type string $ref_transnumber
     *     @type string $crdate
     *     @type string $transdate
     *     @type string $duedate
     *           Date-time
     *     @type int|string $customer_id
     *           Reference to [Customer](#customer).id
     *     @type int|string $employee_id
     *           Reference to [Employee](#employee).id
     *     @type int|string $department
     *           Reference to [Groups](#groups).id (only where groupname = 'department')
     *     @type int|string $project_id
     *           Reference to [Project](#project).id
     *     @type int|string $place_id
     *           Reference to [Place](#place).id
     *     @type int|string $paidtype
     *           Reference to [Groups](#groups).id (only where groupname = 'paidtype')
     *     @type string $curr
     *     @type bool $notax
     *     @type bool $paid
     *     @type float $acrate
     *     @type string $notes
     *     @type string $intnotes
     *     @type string $fnote
     *     @type int|string $transtate
     *           Reference to [Groups](#groups).id (only where groupname = 'transtate')
     *     @type bool $closed
     *     @type \Nervatura\MetaData[]|\Google\Protobuf\Internal\RepeatedField $metadata
     *           Trans meta data
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Api::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>int64 id = 1;</code>
     * @return int|string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Generated from protobuf field <code>int64 id = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkInt64($var);
        $this->id = $var;

        return $this;
    }

    /**
     * Unique ID. If you set it to numberdef, it will be generated at the first data save. The format and value of the next data in row is taken from the numberdef (numberkey = transnumber) data series.
     *
     * Generated from protobuf field <code>string transnumber = 2;</code>
     * @return string
     */
    public function getTransnumber()
    {
        return $this->transnumber;
    }

    /**
     * Unique ID. If you set it to numberdef, it will be generated at the first data save. The format and value of the next data in row is taken from the numberdef (numberkey = transnumber) data series.
     *
     * Generated from protobuf field <code>string transnumber = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setTransnumber($var)
    {
        GPBUtil::checkString($var, True);
        $this->transnumber = $var;

        return $this;
    }

    /**
     * Reference to [Groups](#groups).id (only where groupname = 'transtype')[Groups](#groups).id
     *
     * Generated from protobuf field <code>int64 transtype = 3;</code>
     * @return int|string
     */
    public function getTranstype()
    {
        return $this->transtype;
    }

    /**
     * Reference to [Groups](#groups).id (only where groupname = 'transtype')[Groups](#groups).id
     *
     * Generated from protobuf field <code>int64 transtype = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTranstype($var)
    {
        GPBUtil::checkInt64($var);
        $this->transtype = $var;

        return $this;
    }

    /**
     * Reference to [Groups](#groups).id (only where groupname = 'direction')
     *
     * Generated from protobuf field <code>int64 direction = 4;</code>
     * @return int|string
     */
    public function getDirection()
    {
        return $this->direction;
    }

    /**
     * Reference to [Groups](#groups).id (only where groupname = 'direction')
     *
     * Generated from protobuf field <code>int64 direction = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setDirection($var)
    {
        GPBUtil::checkInt64($var);
        $this->direction = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string ref_transnumber = 5;</code>
     * @return string
     */
    public function getRefTransnumber()
    {
        return isset($this->ref_transnumber) ? $this->ref_transnumber : '';
    }

    public function hasRefTransnumber()
    {
        return isset($this->ref_transnumber);
    }

    public function clearRefTransnumber()
    {
        unset($this->ref_transnumber);
    }

    /**
     * Generated from protobuf field <code>string ref_transnumber = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setRefTransnumber($var)
    {
        GPBUtil::checkString($var, True);
        $this->ref_transnumber = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string crdate = 6;</code>
     * @return string
     */
    public function getCrdate()
    {
        return $this->crdate;
    }

    /**
     * Generated from protobuf field <code>string crdate = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setCrdate($var)
    {
        GPBUtil::checkString($var, True);
        $this->crdate = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string transdate = 7;</code>
     * @return string
     */
    public function getTransdate()
    {
        return $this->transdate;
    }

    /**
     * Generated from protobuf field <code>string transdate = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setTransdate($var)
    {
        GPBUtil::checkString($var, True);
        $this->transdate = $var;

        return $this;
    }

    /**
     * Date-time
     *
     * Generated from protobuf field <code>string duedate = 8;</code>
     * @return string
     */
    public function getDuedate()
    {
        return isset($this->duedate) ? $this->duedate : '';
    }

    public function hasDuedate()
    {
        return isset($this->duedate);
    }

    public function clearDuedate()
    {
        unset($this->duedate);
    }

    /**
     * Date-time
     *
     * Generated from protobuf field <code>string duedate = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setDuedate($var)
    {
        GPBUtil::checkString($var, True);
        $this->duedate = $var;

        return $this;
    }

    /**
     * Reference to [Customer](#customer).id
     *
     * Generated from protobuf field <code>int64 customer_id = 9;</code>
     * @return int|string
     */
    public function getCustomerId()
    {
        return isset($this->customer_id) ? $this->customer_id : 0;
    }

    public function hasCustomerId()
    {
        return isset($this->customer_id);
    }

    public function clearCustomerId()
    {
        unset($this->customer_id);
    }

    /**
     * Reference to [Customer](#customer).id
     *
     * Generated from protobuf field <code>int64 customer_id = 9;</code>
     * @param int|string $var
     * @return $this
     */
    public function setCustomerId($var)
    {
        GPBUtil::checkInt64($var);
        $this->customer_id = $var;

        return $this;
    }

    /**
     * Reference to [Employee](#employee).id
     *
     * Generated from protobuf field <code>int64 employee_id = 10;</code>
     * @return int|string
     */
    public function getEmployeeId()
    {
        return isset($this->employee_id) ? $this->employee_id : 0;
    }

    public function hasEmployeeId()
    {
        return isset($this->employee_id);
    }

    public function clearEmployeeId()
    {
        unset($this->employee_id);
    }

    /**
     * Reference to [Employee](#employee).id
     *
     * Generated from protobuf field <code>int64 employee_id = 10;</code>
     * @param int|string $var
     * @return $this
     */
    public function setEmployeeId($var)
    {
        GPBUtil::checkInt64($var);
        $this->employee_id = $var;

        return $this;
    }

    /**
     * Reference to [Groups](#groups).id (only where groupname = 'department')
     *
     * Generated from protobuf field <code>int64 department = 11;</code>
     * @return int|string
     */
    public function getDepartment()
    {
        return isset($this->department) ? $this->department : 0;
    }

    public function hasDepartment()
    {
        return isset($this->department);
    }

    public function clearDepartment()
    {
        unset($this->department);
    }

    /**
     * Reference to [Groups](#groups).id (only where groupname = 'department')
     *
     * Generated from protobuf field <code>int64 department = 11;</code>
     * @param int|string $var
     * @return $this
     */
    public function setDepartment($var)
    {
        GPBUtil::checkInt64($var);
        $this->department = $var;

        return $this;
    }

    /**
     * Reference to [Project](#project).id
     *
     * Generated from protobuf field <code>int64 project_id = 12;</code>
     * @return int|string
     */
    public function getProjectId()
    {
        return isset($this->project_id) ? $this->project_id : 0;
    }

    public function hasProjectId()
    {
        return isset($this->project_id);
    }

    public function clearProjectId()
    {
        unset($this->project_id);
    }

    /**
     * Reference to [Project](#project).id
     *
     * Generated from protobuf field <code>int64 project_id = 12;</code>
     * @param int|string $var
     * @return $this
     */
    public function setProjectId($var)
    {
        GPBUtil::checkInt64($var);
        $this->project_id = $var;

        return $this;
    }

    /**
     * Reference to [Place](#place).id
     *
     * Generated from protobuf field <code>int64 place_id = 13;</code>
     * @return int|string
     */
    public function getPlaceId()
    {
        return isset($this->place_id) ? $this->place_id : 0;
    }

    public function hasPlaceId()
    {
        return isset($this->place_id);
    }

    public function clearPlaceId()
    {
        unset($this->place_id);
    }

    /**
     * Reference to [Place](#place).id
     *
     * Generated from protobuf field <code>int64 place_id = 13;</code>
     * @param int|string $var
     * @return $this
     */
    public function setPlaceId($var)
    {
        GPBUtil::checkInt64($var);
        $this->place_id = $var;

        return $this;
    }

    /**
     * Reference to [Groups](#groups).id (only where groupname = 'paidtype')
     *
     * Generated from protobuf field <code>int64 paidtype = 14;</code>
     * @return int|string
     */
    public function getPaidtype()
    {
        return isset($this->paidtype) ? $this->paidtype : 0;
    }

    public function hasPaidtype()
    {
        return isset($this->paidtype);
    }

    public function clearPaidtype()
    {
        unset($this->paidtype);
    }

    /**
     * Reference to [Groups](#groups).id (only where groupname = 'paidtype')
     *
     * Generated from protobuf field <code>int64 paidtype = 14;</code>
     * @param int|string $var
     * @return $this
     */
    public function setPaidtype($var)
    {
        GPBUtil::checkInt64($var);
        $this->paidtype = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string curr = 15;</code>
     * @return string
     */
    public function getCurr()
    {
        return isset($this->curr) ? $this->curr : '';
    }

    public function hasCurr()
    {
        return isset($this->curr);
    }

    public function clearCurr()
    {
        unset($this->curr);
    }

    /**
     * Generated from protobuf field <code>string curr = 15;</code>
     * @param string $var
     * @return $this
     */
    public function setCurr($var)
    {
        GPBUtil::checkString($var, True);
        $this->curr = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool notax = 16;</code>
     * @return bool
     */
    public function getNotax()
    {
        return $this->notax;
    }

    /**
     * Generated from protobuf field <code>bool notax = 16;</code>
     * @param bool $var
     * @return $this
     */
    public function setNotax($var)
    {
        GPBUtil::checkBool($var);
        $this->notax = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool paid = 17;</code>
     * @return bool
     */
    public function getPaid()
    {
        return $this->paid;
    }

    /**
     * Generated from protobuf field <code>bool paid = 17;</code>
     * @param bool $var
     * @return $this
     */
    public function setPaid($var)
    {
        GPBUtil::checkBool($var);
        $this->paid = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>double acrate = 18;</code>
     * @return float
     */
    public function getAcrate()
    {
        return $this->acrate;
    }

    /**
     * Generated from protobuf field <code>double acrate = 18;</code>
     * @param float $var
     * @return $this
     */
    public function setAcrate($var)
    {
        GPBUtil::checkDouble($var);
        $this->acrate = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string notes = 19;</code>
     * @return string
     */
    public function getNotes()
    {
        return $this->notes;
    }

    /**
     * Generated from protobuf field <code>string notes = 19;</code>
     * @param string $var
     * @return $this
     */
    public function setNotes($var)
    {
        GPBUtil::checkString($var, True);
        $this->notes = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string intnotes = 20;</code>
     * @return string
     */
    public function getIntnotes()
    {
        return $this->intnotes;
    }

    /**
     * Generated from protobuf field <code>string intnotes = 20;</code>
     * @param string $var
     * @return $this
     */
    public function setIntnotes($var)
    {
        GPBUtil::checkString($var, True);
        $this->intnotes = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string fnote = 21;</code>
     * @return string
     */
    public function getFnote()
    {
        return $this->fnote;
    }

    /**
     * Generated from protobuf field <code>string fnote = 21;</code>
     * @param string $var
     * @return $this
     */
    public function setFnote($var)
    {
        GPBUtil::checkString($var, True);
        $this->fnote = $var;

        return $this;
    }

    /**
     * Reference to [Groups](#groups).id (only where groupname = 'transtate')
     *
     * Generated from protobuf field <code>int64 transtate = 22;</code>
     * @return int|string
     */
    public function getTranstate()
    {
        return $this->transtate;
    }

    /**
     * Reference to [Groups](#groups).id (only where groupname = 'transtate')
     *
     * Generated from protobuf field <code>int64 transtate = 22;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTranstate($var)
    {
        GPBUtil::checkInt64($var);
        $this->transtate = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool closed = 23;</code>
     * @return bool
     */
    public function getClosed()
    {
        return $this->closed;
    }

    /**
     * Generated from protobuf field <code>bool closed = 23;</code>
     * @param bool $var
     * @return $this
     */
    public function setClosed($var)
    {
        GPBUtil::checkBool($var);
        $this->closed = $var;

        return $this;
    }

    /**
     * Trans meta data
     *
     * Generated from protobuf field <code>repeated .nervatura.MetaData metadata = 24;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    /**
     * Trans meta data
     *
     * Generated from protobuf field <code>repeated .nervatura.MetaData metadata = 24;</code>
     * @param \Nervatura\MetaData[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setMetadata($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Nervatura\MetaData::class);
        $this->metadata = $arr;

        return $this;
    }

}

