<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api.proto

namespace Nervatura;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *RequestUpdate Key->ID keys:
 *- ```id```: Customer *custnumber*
 *- ```custtype```: Valid values: *own, company, private, other*
 *
 * Generated from protobuf message <code>nervatura.Customer</code>
 */
class Customer extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>int64 id = 1;</code>
     */
    protected $id = 0;
    /**
     * Reference to [Groups](#groups).id (only where groupname = 'custtype')
     *
     * Generated from protobuf field <code>int64 custtype = 2;</code>
     */
    protected $custtype = 0;
    /**
     * Unique ID. If you set it to numberdef, it will be generated at the first data save. The format and value of the next data in row is taken from the numberdef (numberkey = custnumber) data series.
     *
     * Generated from protobuf field <code>string custnumber = 3;</code>
     */
    protected $custnumber = '';
    /**
     * Full name of the customer
     *
     * Generated from protobuf field <code>string custname = 4;</code>
     */
    protected $custname = '';
    /**
     * Generated from protobuf field <code>string taxnumber = 5;</code>
     */
    protected $taxnumber = '';
    /**
     * Generated from protobuf field <code>string account = 6;</code>
     */
    protected $account = '';
    /**
     * Tax-free
     *
     * Generated from protobuf field <code>bool notax = 7;</code>
     */
    protected $notax = false;
    /**
     * Payment per.
     *
     * Generated from protobuf field <code>int64 terms = 8;</code>
     */
    protected $terms = 0;
    /**
     * Customer's credit limit. Data is used by financial reports.
     *
     * Generated from protobuf field <code>double creditlimit = 9;</code>
     */
    protected $creditlimit = 0.0;
    /**
     * If new product line is added (offer, order, invoice etc.) all products will receive the discount percentage specified in this field. If the product has a separate customer price, the value specified here will not be considered by the program.
     *
     * Generated from protobuf field <code>double discount = 10;</code>
     */
    protected $discount = 0.0;
    /**
     * Generated from protobuf field <code>string notes = 11;</code>
     */
    protected $notes = '';
    /**
     * Generated from protobuf field <code>bool inactive = 12;</code>
     */
    protected $inactive = false;
    /**
     * Customer meta data
     *
     * Generated from protobuf field <code>repeated .nervatura.MetaData metadata = 13;</code>
     */
    private $metadata;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $id
     *     @type int|string $custtype
     *           Reference to [Groups](#groups).id (only where groupname = 'custtype')
     *     @type string $custnumber
     *           Unique ID. If you set it to numberdef, it will be generated at the first data save. The format and value of the next data in row is taken from the numberdef (numberkey = custnumber) data series.
     *     @type string $custname
     *           Full name of the customer
     *     @type string $taxnumber
     *     @type string $account
     *     @type bool $notax
     *           Tax-free
     *     @type int|string $terms
     *           Payment per.
     *     @type float $creditlimit
     *           Customer's credit limit. Data is used by financial reports.
     *     @type float $discount
     *           If new product line is added (offer, order, invoice etc.) all products will receive the discount percentage specified in this field. If the product has a separate customer price, the value specified here will not be considered by the program.
     *     @type string $notes
     *     @type bool $inactive
     *     @type \Nervatura\MetaData[]|\Google\Protobuf\Internal\RepeatedField $metadata
     *           Customer meta data
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Api::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>int64 id = 1;</code>
     * @return int|string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Generated from protobuf field <code>int64 id = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkInt64($var);
        $this->id = $var;

        return $this;
    }

    /**
     * Reference to [Groups](#groups).id (only where groupname = 'custtype')
     *
     * Generated from protobuf field <code>int64 custtype = 2;</code>
     * @return int|string
     */
    public function getCusttype()
    {
        return $this->custtype;
    }

    /**
     * Reference to [Groups](#groups).id (only where groupname = 'custtype')
     *
     * Generated from protobuf field <code>int64 custtype = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setCusttype($var)
    {
        GPBUtil::checkInt64($var);
        $this->custtype = $var;

        return $this;
    }

    /**
     * Unique ID. If you set it to numberdef, it will be generated at the first data save. The format and value of the next data in row is taken from the numberdef (numberkey = custnumber) data series.
     *
     * Generated from protobuf field <code>string custnumber = 3;</code>
     * @return string
     */
    public function getCustnumber()
    {
        return $this->custnumber;
    }

    /**
     * Unique ID. If you set it to numberdef, it will be generated at the first data save. The format and value of the next data in row is taken from the numberdef (numberkey = custnumber) data series.
     *
     * Generated from protobuf field <code>string custnumber = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setCustnumber($var)
    {
        GPBUtil::checkString($var, True);
        $this->custnumber = $var;

        return $this;
    }

    /**
     * Full name of the customer
     *
     * Generated from protobuf field <code>string custname = 4;</code>
     * @return string
     */
    public function getCustname()
    {
        return $this->custname;
    }

    /**
     * Full name of the customer
     *
     * Generated from protobuf field <code>string custname = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setCustname($var)
    {
        GPBUtil::checkString($var, True);
        $this->custname = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string taxnumber = 5;</code>
     * @return string
     */
    public function getTaxnumber()
    {
        return $this->taxnumber;
    }

    /**
     * Generated from protobuf field <code>string taxnumber = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setTaxnumber($var)
    {
        GPBUtil::checkString($var, True);
        $this->taxnumber = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string account = 6;</code>
     * @return string
     */
    public function getAccount()
    {
        return $this->account;
    }

    /**
     * Generated from protobuf field <code>string account = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setAccount($var)
    {
        GPBUtil::checkString($var, True);
        $this->account = $var;

        return $this;
    }

    /**
     * Tax-free
     *
     * Generated from protobuf field <code>bool notax = 7;</code>
     * @return bool
     */
    public function getNotax()
    {
        return $this->notax;
    }

    /**
     * Tax-free
     *
     * Generated from protobuf field <code>bool notax = 7;</code>
     * @param bool $var
     * @return $this
     */
    public function setNotax($var)
    {
        GPBUtil::checkBool($var);
        $this->notax = $var;

        return $this;
    }

    /**
     * Payment per.
     *
     * Generated from protobuf field <code>int64 terms = 8;</code>
     * @return int|string
     */
    public function getTerms()
    {
        return $this->terms;
    }

    /**
     * Payment per.
     *
     * Generated from protobuf field <code>int64 terms = 8;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTerms($var)
    {
        GPBUtil::checkInt64($var);
        $this->terms = $var;

        return $this;
    }

    /**
     * Customer's credit limit. Data is used by financial reports.
     *
     * Generated from protobuf field <code>double creditlimit = 9;</code>
     * @return float
     */
    public function getCreditlimit()
    {
        return $this->creditlimit;
    }

    /**
     * Customer's credit limit. Data is used by financial reports.
     *
     * Generated from protobuf field <code>double creditlimit = 9;</code>
     * @param float $var
     * @return $this
     */
    public function setCreditlimit($var)
    {
        GPBUtil::checkDouble($var);
        $this->creditlimit = $var;

        return $this;
    }

    /**
     * If new product line is added (offer, order, invoice etc.) all products will receive the discount percentage specified in this field. If the product has a separate customer price, the value specified here will not be considered by the program.
     *
     * Generated from protobuf field <code>double discount = 10;</code>
     * @return float
     */
    public function getDiscount()
    {
        return $this->discount;
    }

    /**
     * If new product line is added (offer, order, invoice etc.) all products will receive the discount percentage specified in this field. If the product has a separate customer price, the value specified here will not be considered by the program.
     *
     * Generated from protobuf field <code>double discount = 10;</code>
     * @param float $var
     * @return $this
     */
    public function setDiscount($var)
    {
        GPBUtil::checkDouble($var);
        $this->discount = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string notes = 11;</code>
     * @return string
     */
    public function getNotes()
    {
        return $this->notes;
    }

    /**
     * Generated from protobuf field <code>string notes = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setNotes($var)
    {
        GPBUtil::checkString($var, True);
        $this->notes = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool inactive = 12;</code>
     * @return bool
     */
    public function getInactive()
    {
        return $this->inactive;
    }

    /**
     * Generated from protobuf field <code>bool inactive = 12;</code>
     * @param bool $var
     * @return $this
     */
    public function setInactive($var)
    {
        GPBUtil::checkBool($var);
        $this->inactive = $var;

        return $this;
    }

    /**
     * Customer meta data
     *
     * Generated from protobuf field <code>repeated .nervatura.MetaData metadata = 13;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    /**
     * Customer meta data
     *
     * Generated from protobuf field <code>repeated .nervatura.MetaData metadata = 13;</code>
     * @param \Nervatura\MetaData[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setMetadata($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Nervatura\MetaData::class);
        $this->metadata = $arr;

        return $this;
    }

}

