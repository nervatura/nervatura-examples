<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api.proto

namespace Nervatura;

use UnexpectedValueException;

/**
 * Protobuf type <code>nervatura.ReportSize</code>
 */
class ReportSize
{
    /**
     * Generated from protobuf enum <code>a3 = 0;</code>
     */
    const a3 = 0;
    /**
     * Generated from protobuf enum <code>a4 = 1;</code>
     */
    const a4 = 1;
    /**
     * Generated from protobuf enum <code>a5 = 2;</code>
     */
    const a5 = 2;
    /**
     * Generated from protobuf enum <code>letter = 3;</code>
     */
    const letter = 3;
    /**
     * Generated from protobuf enum <code>legal = 4;</code>
     */
    const legal = 4;

    private static $valueToName = [
        self::a3 => 'a3',
        self::a4 => 'a4',
        self::a5 => 'a5',
        self::letter => 'letter',
        self::legal => 'legal',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtolower($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

