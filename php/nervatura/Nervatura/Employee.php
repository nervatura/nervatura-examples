<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api.proto

namespace Nervatura;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *RequestUpdate Key->ID keys:
 *- ```id```: Employee *empnumber*
 *- ```usergroup```: All groupvalue from Groups, where groupname equal usergroup
 *- ```department```: All groupvalue from Groups, where groupname equal department
 *
 * Generated from protobuf message <code>nervatura.Employee</code>
 */
class Employee extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>int64 id = 1;</code>
     */
    protected $id = 0;
    /**
     * Unique ID. If you set it to numberdef, it will be generated at the first data save. The format and value of the next data in row is taken from the numberdef (numberkey = empnumber) data series.
     *
     * Generated from protobuf field <code>string empnumber = 2;</code>
     */
    protected $empnumber = '';
    /**
     * Database login name. Should be unique on database level.
     *
     * Generated from protobuf field <code>string username = 3;</code>
     */
    protected $username = null;
    /**
     * Reference to [Groups](#groups).id (only where groupname = 'usergroup')
     *
     * Generated from protobuf field <code>int64 usergroup = 4;</code>
     */
    protected $usergroup = 0;
    /**
     * Generated from protobuf field <code>string startdate = 5;</code>
     */
    protected $startdate = null;
    /**
     * Generated from protobuf field <code>string enddate = 6;</code>
     */
    protected $enddate = null;
    /**
     * Reference to [Groups](#groups).id (only where groupname = 'department')
     *
     * Generated from protobuf field <code>int64 department = 7;</code>
     */
    protected $department = null;
    /**
     * Generated from protobuf field <code>string registration_key = 8;</code>
     */
    protected $registration_key = '';
    /**
     * Generated from protobuf field <code>bool inactive = 9;</code>
     */
    protected $inactive = false;
    /**
     * Employee meta data
     *
     * Generated from protobuf field <code>repeated .nervatura.MetaData metadata = 13;</code>
     */
    private $metadata;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $id
     *     @type string $empnumber
     *           Unique ID. If you set it to numberdef, it will be generated at the first data save. The format and value of the next data in row is taken from the numberdef (numberkey = empnumber) data series.
     *     @type string $username
     *           Database login name. Should be unique on database level.
     *     @type int|string $usergroup
     *           Reference to [Groups](#groups).id (only where groupname = 'usergroup')
     *     @type string $startdate
     *     @type string $enddate
     *     @type int|string $department
     *           Reference to [Groups](#groups).id (only where groupname = 'department')
     *     @type string $registration_key
     *     @type bool $inactive
     *     @type \Nervatura\MetaData[]|\Google\Protobuf\Internal\RepeatedField $metadata
     *           Employee meta data
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Api::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>int64 id = 1;</code>
     * @return int|string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Generated from protobuf field <code>int64 id = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkInt64($var);
        $this->id = $var;

        return $this;
    }

    /**
     * Unique ID. If you set it to numberdef, it will be generated at the first data save. The format and value of the next data in row is taken from the numberdef (numberkey = empnumber) data series.
     *
     * Generated from protobuf field <code>string empnumber = 2;</code>
     * @return string
     */
    public function getEmpnumber()
    {
        return $this->empnumber;
    }

    /**
     * Unique ID. If you set it to numberdef, it will be generated at the first data save. The format and value of the next data in row is taken from the numberdef (numberkey = empnumber) data series.
     *
     * Generated from protobuf field <code>string empnumber = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setEmpnumber($var)
    {
        GPBUtil::checkString($var, True);
        $this->empnumber = $var;

        return $this;
    }

    /**
     * Database login name. Should be unique on database level.
     *
     * Generated from protobuf field <code>string username = 3;</code>
     * @return string
     */
    public function getUsername()
    {
        return isset($this->username) ? $this->username : '';
    }

    public function hasUsername()
    {
        return isset($this->username);
    }

    public function clearUsername()
    {
        unset($this->username);
    }

    /**
     * Database login name. Should be unique on database level.
     *
     * Generated from protobuf field <code>string username = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setUsername($var)
    {
        GPBUtil::checkString($var, True);
        $this->username = $var;

        return $this;
    }

    /**
     * Reference to [Groups](#groups).id (only where groupname = 'usergroup')
     *
     * Generated from protobuf field <code>int64 usergroup = 4;</code>
     * @return int|string
     */
    public function getUsergroup()
    {
        return $this->usergroup;
    }

    /**
     * Reference to [Groups](#groups).id (only where groupname = 'usergroup')
     *
     * Generated from protobuf field <code>int64 usergroup = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setUsergroup($var)
    {
        GPBUtil::checkInt64($var);
        $this->usergroup = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string startdate = 5;</code>
     * @return string
     */
    public function getStartdate()
    {
        return isset($this->startdate) ? $this->startdate : '';
    }

    public function hasStartdate()
    {
        return isset($this->startdate);
    }

    public function clearStartdate()
    {
        unset($this->startdate);
    }

    /**
     * Generated from protobuf field <code>string startdate = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setStartdate($var)
    {
        GPBUtil::checkString($var, True);
        $this->startdate = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string enddate = 6;</code>
     * @return string
     */
    public function getEnddate()
    {
        return isset($this->enddate) ? $this->enddate : '';
    }

    public function hasEnddate()
    {
        return isset($this->enddate);
    }

    public function clearEnddate()
    {
        unset($this->enddate);
    }

    /**
     * Generated from protobuf field <code>string enddate = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setEnddate($var)
    {
        GPBUtil::checkString($var, True);
        $this->enddate = $var;

        return $this;
    }

    /**
     * Reference to [Groups](#groups).id (only where groupname = 'department')
     *
     * Generated from protobuf field <code>int64 department = 7;</code>
     * @return int|string
     */
    public function getDepartment()
    {
        return isset($this->department) ? $this->department : 0;
    }

    public function hasDepartment()
    {
        return isset($this->department);
    }

    public function clearDepartment()
    {
        unset($this->department);
    }

    /**
     * Reference to [Groups](#groups).id (only where groupname = 'department')
     *
     * Generated from protobuf field <code>int64 department = 7;</code>
     * @param int|string $var
     * @return $this
     */
    public function setDepartment($var)
    {
        GPBUtil::checkInt64($var);
        $this->department = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string registration_key = 8;</code>
     * @return string
     */
    public function getRegistrationKey()
    {
        return $this->registration_key;
    }

    /**
     * Generated from protobuf field <code>string registration_key = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setRegistrationKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->registration_key = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool inactive = 9;</code>
     * @return bool
     */
    public function getInactive()
    {
        return $this->inactive;
    }

    /**
     * Generated from protobuf field <code>bool inactive = 9;</code>
     * @param bool $var
     * @return $this
     */
    public function setInactive($var)
    {
        GPBUtil::checkBool($var);
        $this->inactive = $var;

        return $this;
    }

    /**
     * Employee meta data
     *
     * Generated from protobuf field <code>repeated .nervatura.MetaData metadata = 13;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    /**
     * Employee meta data
     *
     * Generated from protobuf field <code>repeated .nervatura.MetaData metadata = 13;</code>
     * @param \Nervatura\MetaData[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setMetadata($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Nervatura\MetaData::class);
        $this->metadata = $arr;

        return $this;
    }

}

