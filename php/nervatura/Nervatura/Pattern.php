<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api.proto

namespace Nervatura;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *RequestUpdate Key->ID keys:
 *- ```id```: Pattern *description*
 *
 * Generated from protobuf message <code>nervatura.Pattern</code>
 */
class Pattern extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>int64 id = 1;</code>
     */
    protected $id = 0;
    /**
     * Generated from protobuf field <code>string description = 2;</code>
     */
    protected $description = '';
    /**
     * Reference to [Groups](#groups).id (only where groupname = 'transtype')
     *
     * Generated from protobuf field <code>int64 transtype = 3;</code>
     */
    protected $transtype = 0;
    /**
     * Generated from protobuf field <code>string notes = 4;</code>
     */
    protected $notes = '';
    /**
     * Generated from protobuf field <code>bool defpattern = 5;</code>
     */
    protected $defpattern = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $id
     *     @type string $description
     *     @type int|string $transtype
     *           Reference to [Groups](#groups).id (only where groupname = 'transtype')
     *     @type string $notes
     *     @type bool $defpattern
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Api::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>int64 id = 1;</code>
     * @return int|string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Generated from protobuf field <code>int64 id = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkInt64($var);
        $this->id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string description = 2;</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Generated from protobuf field <code>string description = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * Reference to [Groups](#groups).id (only where groupname = 'transtype')
     *
     * Generated from protobuf field <code>int64 transtype = 3;</code>
     * @return int|string
     */
    public function getTranstype()
    {
        return $this->transtype;
    }

    /**
     * Reference to [Groups](#groups).id (only where groupname = 'transtype')
     *
     * Generated from protobuf field <code>int64 transtype = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTranstype($var)
    {
        GPBUtil::checkInt64($var);
        $this->transtype = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string notes = 4;</code>
     * @return string
     */
    public function getNotes()
    {
        return $this->notes;
    }

    /**
     * Generated from protobuf field <code>string notes = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setNotes($var)
    {
        GPBUtil::checkString($var, True);
        $this->notes = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool defpattern = 5;</code>
     * @return bool
     */
    public function getDefpattern()
    {
        return $this->defpattern;
    }

    /**
     * Generated from protobuf field <code>bool defpattern = 5;</code>
     * @param bool $var
     * @return $this
     */
    public function setDefpattern($var)
    {
        GPBUtil::checkBool($var);
        $this->defpattern = $var;

        return $this;
    }

}

