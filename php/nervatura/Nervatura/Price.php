<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api.proto

namespace Nervatura;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *RequestUpdate Key->ID keys:
 *- ```id```: Price *partnumber~validfrom~curr~qty*
 *- ```product_id```: Product *partnumber*
 *
 * Generated from protobuf message <code>nervatura.Price</code>
 */
class Price extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>int64 id = 1;</code>
     */
    protected $id = 0;
    /**
     * Reference to [Product](#product).id
     *
     * Generated from protobuf field <code>int64 product_id = 2;</code>
     */
    protected $product_id = 0;
    /**
     * Start of validity, mandatory data.
     *
     * Generated from protobuf field <code>string validfrom = 3;</code>
     */
    protected $validfrom = '';
    /**
     * End of validity, can be left empty.
     *
     * Generated from protobuf field <code>string validto = 4;</code>
     */
    protected $validto = null;
    /**
     * Generated from protobuf field <code>string curr = 5;</code>
     */
    protected $curr = '';
    /**
     * Price ranges can also be specified, thus different price can be set for a smaller and bigger quantity of the same product. The quantity should be used as the lower threshold, ie. this should be the minimum quantity for the price set.
     *
     * Generated from protobuf field <code>double qty = 6;</code>
     */
    protected $qty = 0.0;
    /**
     * Price value
     *
     * Generated from protobuf field <code>double pricevalue = 7;</code>
     */
    protected $pricevalue = 0.0;
    /**
     * Supplier (if marked) or customer price. By default the customer price.
     *
     * Generated from protobuf field <code>bool vendorprice = 8;</code>
     */
    protected $vendorprice = false;
    /**
     * Price meta data
     *
     * Generated from protobuf field <code>repeated .nervatura.MetaData metadata = 9;</code>
     */
    private $metadata;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $id
     *     @type int|string $product_id
     *           Reference to [Product](#product).id
     *     @type string $validfrom
     *           Start of validity, mandatory data.
     *     @type string $validto
     *           End of validity, can be left empty.
     *     @type string $curr
     *     @type float $qty
     *           Price ranges can also be specified, thus different price can be set for a smaller and bigger quantity of the same product. The quantity should be used as the lower threshold, ie. this should be the minimum quantity for the price set.
     *     @type float $pricevalue
     *           Price value
     *     @type bool $vendorprice
     *           Supplier (if marked) or customer price. By default the customer price.
     *     @type \Nervatura\MetaData[]|\Google\Protobuf\Internal\RepeatedField $metadata
     *           Price meta data
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Api::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>int64 id = 1;</code>
     * @return int|string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Generated from protobuf field <code>int64 id = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkInt64($var);
        $this->id = $var;

        return $this;
    }

    /**
     * Reference to [Product](#product).id
     *
     * Generated from protobuf field <code>int64 product_id = 2;</code>
     * @return int|string
     */
    public function getProductId()
    {
        return $this->product_id;
    }

    /**
     * Reference to [Product](#product).id
     *
     * Generated from protobuf field <code>int64 product_id = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setProductId($var)
    {
        GPBUtil::checkInt64($var);
        $this->product_id = $var;

        return $this;
    }

    /**
     * Start of validity, mandatory data.
     *
     * Generated from protobuf field <code>string validfrom = 3;</code>
     * @return string
     */
    public function getValidfrom()
    {
        return $this->validfrom;
    }

    /**
     * Start of validity, mandatory data.
     *
     * Generated from protobuf field <code>string validfrom = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setValidfrom($var)
    {
        GPBUtil::checkString($var, True);
        $this->validfrom = $var;

        return $this;
    }

    /**
     * End of validity, can be left empty.
     *
     * Generated from protobuf field <code>string validto = 4;</code>
     * @return string
     */
    public function getValidto()
    {
        return isset($this->validto) ? $this->validto : '';
    }

    public function hasValidto()
    {
        return isset($this->validto);
    }

    public function clearValidto()
    {
        unset($this->validto);
    }

    /**
     * End of validity, can be left empty.
     *
     * Generated from protobuf field <code>string validto = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setValidto($var)
    {
        GPBUtil::checkString($var, True);
        $this->validto = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string curr = 5;</code>
     * @return string
     */
    public function getCurr()
    {
        return $this->curr;
    }

    /**
     * Generated from protobuf field <code>string curr = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setCurr($var)
    {
        GPBUtil::checkString($var, True);
        $this->curr = $var;

        return $this;
    }

    /**
     * Price ranges can also be specified, thus different price can be set for a smaller and bigger quantity of the same product. The quantity should be used as the lower threshold, ie. this should be the minimum quantity for the price set.
     *
     * Generated from protobuf field <code>double qty = 6;</code>
     * @return float
     */
    public function getQty()
    {
        return $this->qty;
    }

    /**
     * Price ranges can also be specified, thus different price can be set for a smaller and bigger quantity of the same product. The quantity should be used as the lower threshold, ie. this should be the minimum quantity for the price set.
     *
     * Generated from protobuf field <code>double qty = 6;</code>
     * @param float $var
     * @return $this
     */
    public function setQty($var)
    {
        GPBUtil::checkDouble($var);
        $this->qty = $var;

        return $this;
    }

    /**
     * Price value
     *
     * Generated from protobuf field <code>double pricevalue = 7;</code>
     * @return float
     */
    public function getPricevalue()
    {
        return $this->pricevalue;
    }

    /**
     * Price value
     *
     * Generated from protobuf field <code>double pricevalue = 7;</code>
     * @param float $var
     * @return $this
     */
    public function setPricevalue($var)
    {
        GPBUtil::checkDouble($var);
        $this->pricevalue = $var;

        return $this;
    }

    /**
     * Supplier (if marked) or customer price. By default the customer price.
     *
     * Generated from protobuf field <code>bool vendorprice = 8;</code>
     * @return bool
     */
    public function getVendorprice()
    {
        return $this->vendorprice;
    }

    /**
     * Supplier (if marked) or customer price. By default the customer price.
     *
     * Generated from protobuf field <code>bool vendorprice = 8;</code>
     * @param bool $var
     * @return $this
     */
    public function setVendorprice($var)
    {
        GPBUtil::checkBool($var);
        $this->vendorprice = $var;

        return $this;
    }

    /**
     * Price meta data
     *
     * Generated from protobuf field <code>repeated .nervatura.MetaData metadata = 9;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    /**
     * Price meta data
     *
     * Generated from protobuf field <code>repeated .nervatura.MetaData metadata = 9;</code>
     * @param \Nervatura\MetaData[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setMetadata($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Nervatura\MetaData::class);
        $this->metadata = $arr;

        return $this;
    }

}

