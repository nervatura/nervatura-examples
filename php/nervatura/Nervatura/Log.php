<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api.proto

namespace Nervatura;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *RequestUpdate Key->ID keys:
 *- ```id```: *{empnumber}~{crdate}'*
 *- ```employee_id```: Employee *empnumber*
 *- ```ref_id```: *{nervatype}/{refnumber}*
 *- ```nervatype```: All groupvalue from Groups, where groupname equal nervatype
 *- ```logstate```: Valid values: update, closed, deleted, print, login, logout
 *
 * Generated from protobuf message <code>nervatura.Log</code>
 */
class Log extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>int64 id = 1;</code>
     */
    protected $id = 0;
    /**
     * Reference to [Employee](#employee).id
     *
     * Generated from protobuf field <code>int64 employee_id = 2;</code>
     */
    protected $employee_id = 0;
    /**
     * Date-time
     *
     * Generated from protobuf field <code>string crdate = 3;</code>
     */
    protected $crdate = '';
    /**
     * Reference to [Groups](#groups).id (only where groupname = 'nervatype')
     *
     * Generated from protobuf field <code>int64 nervatype = 4;</code>
     */
    protected $nervatype = null;
    /**
     * Reference to {nervatype}.id
     *
     * Generated from protobuf field <code>int64 ref_id = 5;</code>
     */
    protected $ref_id = null;
    /**
     * Reference to [Groups](#groups).id (only where groupname = 'logstate')
     *
     * Generated from protobuf field <code>int64 logstate = 6;</code>
     */
    protected $logstate = 0;
    /**
     * Log meta data
     *
     * Generated from protobuf field <code>repeated .nervatura.MetaData metadata = 16;</code>
     */
    private $metadata;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $id
     *     @type int|string $employee_id
     *           Reference to [Employee](#employee).id
     *     @type string $crdate
     *           Date-time
     *     @type int|string $nervatype
     *           Reference to [Groups](#groups).id (only where groupname = 'nervatype')
     *     @type int|string $ref_id
     *           Reference to {nervatype}.id
     *     @type int|string $logstate
     *           Reference to [Groups](#groups).id (only where groupname = 'logstate')
     *     @type \Nervatura\MetaData[]|\Google\Protobuf\Internal\RepeatedField $metadata
     *           Log meta data
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Api::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>int64 id = 1;</code>
     * @return int|string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Generated from protobuf field <code>int64 id = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkInt64($var);
        $this->id = $var;

        return $this;
    }

    /**
     * Reference to [Employee](#employee).id
     *
     * Generated from protobuf field <code>int64 employee_id = 2;</code>
     * @return int|string
     */
    public function getEmployeeId()
    {
        return $this->employee_id;
    }

    /**
     * Reference to [Employee](#employee).id
     *
     * Generated from protobuf field <code>int64 employee_id = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setEmployeeId($var)
    {
        GPBUtil::checkInt64($var);
        $this->employee_id = $var;

        return $this;
    }

    /**
     * Date-time
     *
     * Generated from protobuf field <code>string crdate = 3;</code>
     * @return string
     */
    public function getCrdate()
    {
        return $this->crdate;
    }

    /**
     * Date-time
     *
     * Generated from protobuf field <code>string crdate = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setCrdate($var)
    {
        GPBUtil::checkString($var, True);
        $this->crdate = $var;

        return $this;
    }

    /**
     * Reference to [Groups](#groups).id (only where groupname = 'nervatype')
     *
     * Generated from protobuf field <code>int64 nervatype = 4;</code>
     * @return int|string
     */
    public function getNervatype()
    {
        return isset($this->nervatype) ? $this->nervatype : 0;
    }

    public function hasNervatype()
    {
        return isset($this->nervatype);
    }

    public function clearNervatype()
    {
        unset($this->nervatype);
    }

    /**
     * Reference to [Groups](#groups).id (only where groupname = 'nervatype')
     *
     * Generated from protobuf field <code>int64 nervatype = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setNervatype($var)
    {
        GPBUtil::checkInt64($var);
        $this->nervatype = $var;

        return $this;
    }

    /**
     * Reference to {nervatype}.id
     *
     * Generated from protobuf field <code>int64 ref_id = 5;</code>
     * @return int|string
     */
    public function getRefId()
    {
        return isset($this->ref_id) ? $this->ref_id : 0;
    }

    public function hasRefId()
    {
        return isset($this->ref_id);
    }

    public function clearRefId()
    {
        unset($this->ref_id);
    }

    /**
     * Reference to {nervatype}.id
     *
     * Generated from protobuf field <code>int64 ref_id = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setRefId($var)
    {
        GPBUtil::checkInt64($var);
        $this->ref_id = $var;

        return $this;
    }

    /**
     * Reference to [Groups](#groups).id (only where groupname = 'logstate')
     *
     * Generated from protobuf field <code>int64 logstate = 6;</code>
     * @return int|string
     */
    public function getLogstate()
    {
        return $this->logstate;
    }

    /**
     * Reference to [Groups](#groups).id (only where groupname = 'logstate')
     *
     * Generated from protobuf field <code>int64 logstate = 6;</code>
     * @param int|string $var
     * @return $this
     */
    public function setLogstate($var)
    {
        GPBUtil::checkInt64($var);
        $this->logstate = $var;

        return $this;
    }

    /**
     * Log meta data
     *
     * Generated from protobuf field <code>repeated .nervatura.MetaData metadata = 16;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    /**
     * Log meta data
     *
     * Generated from protobuf field <code>repeated .nervatura.MetaData metadata = 16;</code>
     * @param \Nervatura\MetaData[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setMetadata($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Nervatura\MetaData::class);
        $this->metadata = $arr;

        return $this;
    }

}

