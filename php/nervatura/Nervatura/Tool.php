<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api.proto

namespace Nervatura;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *RequestUpdate Key->ID keys:
 *- ```id```: Tool *serial*
 *- ```toolgroup```: all groupvalue from Groups, where groupname equal toolgroup
 *- ```product_id```: Product *partnumber*
 *
 * Generated from protobuf message <code>nervatura.Tool</code>
 */
class Tool extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>int64 id = 1;</code>
     */
    protected $id = 0;
    /**
     * Unique ID. If you set it to numberdef, it will be generated at the first data save. The format and value of the next data in row is taken from the numberdef (numberkey = serial) data series.
     *
     * Generated from protobuf field <code>string serial = 2;</code>
     */
    protected $serial = '';
    /**
     * Generated from protobuf field <code>string description = 3;</code>
     */
    protected $description = '';
    /**
     * Reference to [Product](#product).id
     *
     * Generated from protobuf field <code>int64 product_id = 4;</code>
     */
    protected $product_id = 0;
    /**
     * Reference to [Groups](#groups).id (only where groupname = 'toolgroup')
     *
     * Generated from protobuf field <code>int64 toolgroup = 5;</code>
     */
    protected $toolgroup = null;
    /**
     * Generated from protobuf field <code>string notes = 6;</code>
     */
    protected $notes = '';
    /**
     * Generated from protobuf field <code>bool inactive = 7;</code>
     */
    protected $inactive = false;
    /**
     * Tool meta data
     *
     * Generated from protobuf field <code>repeated .nervatura.MetaData metadata = 10;</code>
     */
    private $metadata;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $id
     *     @type string $serial
     *           Unique ID. If you set it to numberdef, it will be generated at the first data save. The format and value of the next data in row is taken from the numberdef (numberkey = serial) data series.
     *     @type string $description
     *     @type int|string $product_id
     *           Reference to [Product](#product).id
     *     @type int|string $toolgroup
     *           Reference to [Groups](#groups).id (only where groupname = 'toolgroup')
     *     @type string $notes
     *     @type bool $inactive
     *     @type \Nervatura\MetaData[]|\Google\Protobuf\Internal\RepeatedField $metadata
     *           Tool meta data
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Api::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>int64 id = 1;</code>
     * @return int|string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Generated from protobuf field <code>int64 id = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkInt64($var);
        $this->id = $var;

        return $this;
    }

    /**
     * Unique ID. If you set it to numberdef, it will be generated at the first data save. The format and value of the next data in row is taken from the numberdef (numberkey = serial) data series.
     *
     * Generated from protobuf field <code>string serial = 2;</code>
     * @return string
     */
    public function getSerial()
    {
        return $this->serial;
    }

    /**
     * Unique ID. If you set it to numberdef, it will be generated at the first data save. The format and value of the next data in row is taken from the numberdef (numberkey = serial) data series.
     *
     * Generated from protobuf field <code>string serial = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setSerial($var)
    {
        GPBUtil::checkString($var, True);
        $this->serial = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string description = 3;</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Generated from protobuf field <code>string description = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * Reference to [Product](#product).id
     *
     * Generated from protobuf field <code>int64 product_id = 4;</code>
     * @return int|string
     */
    public function getProductId()
    {
        return $this->product_id;
    }

    /**
     * Reference to [Product](#product).id
     *
     * Generated from protobuf field <code>int64 product_id = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setProductId($var)
    {
        GPBUtil::checkInt64($var);
        $this->product_id = $var;

        return $this;
    }

    /**
     * Reference to [Groups](#groups).id (only where groupname = 'toolgroup')
     *
     * Generated from protobuf field <code>int64 toolgroup = 5;</code>
     * @return int|string
     */
    public function getToolgroup()
    {
        return isset($this->toolgroup) ? $this->toolgroup : 0;
    }

    public function hasToolgroup()
    {
        return isset($this->toolgroup);
    }

    public function clearToolgroup()
    {
        unset($this->toolgroup);
    }

    /**
     * Reference to [Groups](#groups).id (only where groupname = 'toolgroup')
     *
     * Generated from protobuf field <code>int64 toolgroup = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setToolgroup($var)
    {
        GPBUtil::checkInt64($var);
        $this->toolgroup = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string notes = 6;</code>
     * @return string
     */
    public function getNotes()
    {
        return $this->notes;
    }

    /**
     * Generated from protobuf field <code>string notes = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setNotes($var)
    {
        GPBUtil::checkString($var, True);
        $this->notes = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool inactive = 7;</code>
     * @return bool
     */
    public function getInactive()
    {
        return $this->inactive;
    }

    /**
     * Generated from protobuf field <code>bool inactive = 7;</code>
     * @param bool $var
     * @return $this
     */
    public function setInactive($var)
    {
        GPBUtil::checkBool($var);
        $this->inactive = $var;

        return $this;
    }

    /**
     * Tool meta data
     *
     * Generated from protobuf field <code>repeated .nervatura.MetaData metadata = 10;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    /**
     * Tool meta data
     *
     * Generated from protobuf field <code>repeated .nervatura.MetaData metadata = 10;</code>
     * @param \Nervatura\MetaData[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setMetadata($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Nervatura\MetaData::class);
        $this->metadata = $arr;

        return $this;
    }

}

