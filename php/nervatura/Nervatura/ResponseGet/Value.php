<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api.proto

namespace Nervatura\ResponseGet;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>nervatura.ResponseGet.Value</code>
 */
class Value extends \Google\Protobuf\Internal\Message
{
    protected $value;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Nervatura\Address $address
     *     @type \Nervatura\Barcode $barcode
     *     @type \Nervatura\Contact $contact
     *     @type \Nervatura\Currency $currency
     *     @type \Nervatura\Customer $customer
     *     @type \Nervatura\Deffield $deffield
     *     @type \Nervatura\Employee $employee
     *     @type \Nervatura\Event $event
     *     @type \Nervatura\Fieldvalue $fieldvalue
     *     @type \Nervatura\Groups $groups
     *     @type \Nervatura\Item $item
     *     @type \Nervatura\Link $link
     *     @type \Nervatura\Log $log
     *     @type \Nervatura\Movement $movement
     *     @type \Nervatura\Numberdef $numberdef
     *     @type \Nervatura\Pattern $pattern
     *     @type \Nervatura\Payment $payment
     *     @type \Nervatura\Place $place
     *     @type \Nervatura\Price $price
     *     @type \Nervatura\Product $product
     *     @type \Nervatura\Project $project
     *     @type \Nervatura\Rate $rate
     *     @type \Nervatura\Tax $tax
     *     @type \Nervatura\Tool $tool
     *     @type \Nervatura\Trans $trans
     *     @type \Nervatura\UiAudit $ui_audit
     *     @type \Nervatura\UiMenu $ui_menu
     *     @type \Nervatura\UiMenufields $ui_menufields
     *     @type \Nervatura\UiMessage $ui_message
     *     @type \Nervatura\UiPrintqueue $ui_printqueue
     *     @type \Nervatura\UiReport $ui_report
     *     @type \Nervatura\UiUserconfig $ui_userconfig
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Api::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.nervatura.Address address = 1;</code>
     * @return \Nervatura\Address
     */
    public function getAddress()
    {
        return $this->readOneof(1);
    }

    public function hasAddress()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>.nervatura.Address address = 1;</code>
     * @param \Nervatura\Address $var
     * @return $this
     */
    public function setAddress($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\Address::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.Barcode barcode = 2;</code>
     * @return \Nervatura\Barcode
     */
    public function getBarcode()
    {
        return $this->readOneof(2);
    }

    public function hasBarcode()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.nervatura.Barcode barcode = 2;</code>
     * @param \Nervatura\Barcode $var
     * @return $this
     */
    public function setBarcode($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\Barcode::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.Contact contact = 3;</code>
     * @return \Nervatura\Contact
     */
    public function getContact()
    {
        return $this->readOneof(3);
    }

    public function hasContact()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>.nervatura.Contact contact = 3;</code>
     * @param \Nervatura\Contact $var
     * @return $this
     */
    public function setContact($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\Contact::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.Currency currency = 4;</code>
     * @return \Nervatura\Currency
     */
    public function getCurrency()
    {
        return $this->readOneof(4);
    }

    public function hasCurrency()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>.nervatura.Currency currency = 4;</code>
     * @param \Nervatura\Currency $var
     * @return $this
     */
    public function setCurrency($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\Currency::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.Customer customer = 5;</code>
     * @return \Nervatura\Customer
     */
    public function getCustomer()
    {
        return $this->readOneof(5);
    }

    public function hasCustomer()
    {
        return $this->hasOneof(5);
    }

    /**
     * Generated from protobuf field <code>.nervatura.Customer customer = 5;</code>
     * @param \Nervatura\Customer $var
     * @return $this
     */
    public function setCustomer($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\Customer::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.Deffield deffield = 6;</code>
     * @return \Nervatura\Deffield
     */
    public function getDeffield()
    {
        return $this->readOneof(6);
    }

    public function hasDeffield()
    {
        return $this->hasOneof(6);
    }

    /**
     * Generated from protobuf field <code>.nervatura.Deffield deffield = 6;</code>
     * @param \Nervatura\Deffield $var
     * @return $this
     */
    public function setDeffield($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\Deffield::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.Employee employee = 7;</code>
     * @return \Nervatura\Employee
     */
    public function getEmployee()
    {
        return $this->readOneof(7);
    }

    public function hasEmployee()
    {
        return $this->hasOneof(7);
    }

    /**
     * Generated from protobuf field <code>.nervatura.Employee employee = 7;</code>
     * @param \Nervatura\Employee $var
     * @return $this
     */
    public function setEmployee($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\Employee::class);
        $this->writeOneof(7, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.Event event = 8;</code>
     * @return \Nervatura\Event
     */
    public function getEvent()
    {
        return $this->readOneof(8);
    }

    public function hasEvent()
    {
        return $this->hasOneof(8);
    }

    /**
     * Generated from protobuf field <code>.nervatura.Event event = 8;</code>
     * @param \Nervatura\Event $var
     * @return $this
     */
    public function setEvent($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\Event::class);
        $this->writeOneof(8, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.Fieldvalue fieldvalue = 9;</code>
     * @return \Nervatura\Fieldvalue
     */
    public function getFieldvalue()
    {
        return $this->readOneof(9);
    }

    public function hasFieldvalue()
    {
        return $this->hasOneof(9);
    }

    /**
     * Generated from protobuf field <code>.nervatura.Fieldvalue fieldvalue = 9;</code>
     * @param \Nervatura\Fieldvalue $var
     * @return $this
     */
    public function setFieldvalue($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\Fieldvalue::class);
        $this->writeOneof(9, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.Groups groups = 10;</code>
     * @return \Nervatura\Groups
     */
    public function getGroups()
    {
        return $this->readOneof(10);
    }

    public function hasGroups()
    {
        return $this->hasOneof(10);
    }

    /**
     * Generated from protobuf field <code>.nervatura.Groups groups = 10;</code>
     * @param \Nervatura\Groups $var
     * @return $this
     */
    public function setGroups($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\Groups::class);
        $this->writeOneof(10, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.Item item = 11;</code>
     * @return \Nervatura\Item
     */
    public function getItem()
    {
        return $this->readOneof(11);
    }

    public function hasItem()
    {
        return $this->hasOneof(11);
    }

    /**
     * Generated from protobuf field <code>.nervatura.Item item = 11;</code>
     * @param \Nervatura\Item $var
     * @return $this
     */
    public function setItem($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\Item::class);
        $this->writeOneof(11, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.Link link = 12;</code>
     * @return \Nervatura\Link
     */
    public function getLink()
    {
        return $this->readOneof(12);
    }

    public function hasLink()
    {
        return $this->hasOneof(12);
    }

    /**
     * Generated from protobuf field <code>.nervatura.Link link = 12;</code>
     * @param \Nervatura\Link $var
     * @return $this
     */
    public function setLink($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\Link::class);
        $this->writeOneof(12, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.Log log = 13;</code>
     * @return \Nervatura\Log
     */
    public function getLog()
    {
        return $this->readOneof(13);
    }

    public function hasLog()
    {
        return $this->hasOneof(13);
    }

    /**
     * Generated from protobuf field <code>.nervatura.Log log = 13;</code>
     * @param \Nervatura\Log $var
     * @return $this
     */
    public function setLog($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\Log::class);
        $this->writeOneof(13, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.Movement movement = 14;</code>
     * @return \Nervatura\Movement
     */
    public function getMovement()
    {
        return $this->readOneof(14);
    }

    public function hasMovement()
    {
        return $this->hasOneof(14);
    }

    /**
     * Generated from protobuf field <code>.nervatura.Movement movement = 14;</code>
     * @param \Nervatura\Movement $var
     * @return $this
     */
    public function setMovement($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\Movement::class);
        $this->writeOneof(14, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.Numberdef numberdef = 15;</code>
     * @return \Nervatura\Numberdef
     */
    public function getNumberdef()
    {
        return $this->readOneof(15);
    }

    public function hasNumberdef()
    {
        return $this->hasOneof(15);
    }

    /**
     * Generated from protobuf field <code>.nervatura.Numberdef numberdef = 15;</code>
     * @param \Nervatura\Numberdef $var
     * @return $this
     */
    public function setNumberdef($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\Numberdef::class);
        $this->writeOneof(15, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.Pattern pattern = 16;</code>
     * @return \Nervatura\Pattern
     */
    public function getPattern()
    {
        return $this->readOneof(16);
    }

    public function hasPattern()
    {
        return $this->hasOneof(16);
    }

    /**
     * Generated from protobuf field <code>.nervatura.Pattern pattern = 16;</code>
     * @param \Nervatura\Pattern $var
     * @return $this
     */
    public function setPattern($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\Pattern::class);
        $this->writeOneof(16, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.Payment payment = 17;</code>
     * @return \Nervatura\Payment
     */
    public function getPayment()
    {
        return $this->readOneof(17);
    }

    public function hasPayment()
    {
        return $this->hasOneof(17);
    }

    /**
     * Generated from protobuf field <code>.nervatura.Payment payment = 17;</code>
     * @param \Nervatura\Payment $var
     * @return $this
     */
    public function setPayment($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\Payment::class);
        $this->writeOneof(17, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.Place place = 18;</code>
     * @return \Nervatura\Place
     */
    public function getPlace()
    {
        return $this->readOneof(18);
    }

    public function hasPlace()
    {
        return $this->hasOneof(18);
    }

    /**
     * Generated from protobuf field <code>.nervatura.Place place = 18;</code>
     * @param \Nervatura\Place $var
     * @return $this
     */
    public function setPlace($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\Place::class);
        $this->writeOneof(18, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.Price price = 19;</code>
     * @return \Nervatura\Price
     */
    public function getPrice()
    {
        return $this->readOneof(19);
    }

    public function hasPrice()
    {
        return $this->hasOneof(19);
    }

    /**
     * Generated from protobuf field <code>.nervatura.Price price = 19;</code>
     * @param \Nervatura\Price $var
     * @return $this
     */
    public function setPrice($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\Price::class);
        $this->writeOneof(19, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.Product product = 20;</code>
     * @return \Nervatura\Product
     */
    public function getProduct()
    {
        return $this->readOneof(20);
    }

    public function hasProduct()
    {
        return $this->hasOneof(20);
    }

    /**
     * Generated from protobuf field <code>.nervatura.Product product = 20;</code>
     * @param \Nervatura\Product $var
     * @return $this
     */
    public function setProduct($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\Product::class);
        $this->writeOneof(20, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.Project project = 21;</code>
     * @return \Nervatura\Project
     */
    public function getProject()
    {
        return $this->readOneof(21);
    }

    public function hasProject()
    {
        return $this->hasOneof(21);
    }

    /**
     * Generated from protobuf field <code>.nervatura.Project project = 21;</code>
     * @param \Nervatura\Project $var
     * @return $this
     */
    public function setProject($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\Project::class);
        $this->writeOneof(21, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.Rate rate = 22;</code>
     * @return \Nervatura\Rate
     */
    public function getRate()
    {
        return $this->readOneof(22);
    }

    public function hasRate()
    {
        return $this->hasOneof(22);
    }

    /**
     * Generated from protobuf field <code>.nervatura.Rate rate = 22;</code>
     * @param \Nervatura\Rate $var
     * @return $this
     */
    public function setRate($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\Rate::class);
        $this->writeOneof(22, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.Tax tax = 23;</code>
     * @return \Nervatura\Tax
     */
    public function getTax()
    {
        return $this->readOneof(23);
    }

    public function hasTax()
    {
        return $this->hasOneof(23);
    }

    /**
     * Generated from protobuf field <code>.nervatura.Tax tax = 23;</code>
     * @param \Nervatura\Tax $var
     * @return $this
     */
    public function setTax($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\Tax::class);
        $this->writeOneof(23, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.Tool tool = 24;</code>
     * @return \Nervatura\Tool
     */
    public function getTool()
    {
        return $this->readOneof(24);
    }

    public function hasTool()
    {
        return $this->hasOneof(24);
    }

    /**
     * Generated from protobuf field <code>.nervatura.Tool tool = 24;</code>
     * @param \Nervatura\Tool $var
     * @return $this
     */
    public function setTool($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\Tool::class);
        $this->writeOneof(24, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.Trans trans = 25;</code>
     * @return \Nervatura\Trans
     */
    public function getTrans()
    {
        return $this->readOneof(25);
    }

    public function hasTrans()
    {
        return $this->hasOneof(25);
    }

    /**
     * Generated from protobuf field <code>.nervatura.Trans trans = 25;</code>
     * @param \Nervatura\Trans $var
     * @return $this
     */
    public function setTrans($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\Trans::class);
        $this->writeOneof(25, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.UiAudit ui_audit = 26;</code>
     * @return \Nervatura\UiAudit
     */
    public function getUiAudit()
    {
        return $this->readOneof(26);
    }

    public function hasUiAudit()
    {
        return $this->hasOneof(26);
    }

    /**
     * Generated from protobuf field <code>.nervatura.UiAudit ui_audit = 26;</code>
     * @param \Nervatura\UiAudit $var
     * @return $this
     */
    public function setUiAudit($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\UiAudit::class);
        $this->writeOneof(26, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.UiMenu ui_menu = 27;</code>
     * @return \Nervatura\UiMenu
     */
    public function getUiMenu()
    {
        return $this->readOneof(27);
    }

    public function hasUiMenu()
    {
        return $this->hasOneof(27);
    }

    /**
     * Generated from protobuf field <code>.nervatura.UiMenu ui_menu = 27;</code>
     * @param \Nervatura\UiMenu $var
     * @return $this
     */
    public function setUiMenu($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\UiMenu::class);
        $this->writeOneof(27, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.UiMenufields ui_menufields = 28;</code>
     * @return \Nervatura\UiMenufields
     */
    public function getUiMenufields()
    {
        return $this->readOneof(28);
    }

    public function hasUiMenufields()
    {
        return $this->hasOneof(28);
    }

    /**
     * Generated from protobuf field <code>.nervatura.UiMenufields ui_menufields = 28;</code>
     * @param \Nervatura\UiMenufields $var
     * @return $this
     */
    public function setUiMenufields($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\UiMenufields::class);
        $this->writeOneof(28, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.UiMessage ui_message = 29;</code>
     * @return \Nervatura\UiMessage
     */
    public function getUiMessage()
    {
        return $this->readOneof(29);
    }

    public function hasUiMessage()
    {
        return $this->hasOneof(29);
    }

    /**
     * Generated from protobuf field <code>.nervatura.UiMessage ui_message = 29;</code>
     * @param \Nervatura\UiMessage $var
     * @return $this
     */
    public function setUiMessage($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\UiMessage::class);
        $this->writeOneof(29, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.UiPrintqueue ui_printqueue = 30;</code>
     * @return \Nervatura\UiPrintqueue
     */
    public function getUiPrintqueue()
    {
        return $this->readOneof(30);
    }

    public function hasUiPrintqueue()
    {
        return $this->hasOneof(30);
    }

    /**
     * Generated from protobuf field <code>.nervatura.UiPrintqueue ui_printqueue = 30;</code>
     * @param \Nervatura\UiPrintqueue $var
     * @return $this
     */
    public function setUiPrintqueue($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\UiPrintqueue::class);
        $this->writeOneof(30, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.UiReport ui_report = 31;</code>
     * @return \Nervatura\UiReport
     */
    public function getUiReport()
    {
        return $this->readOneof(31);
    }

    public function hasUiReport()
    {
        return $this->hasOneof(31);
    }

    /**
     * Generated from protobuf field <code>.nervatura.UiReport ui_report = 31;</code>
     * @param \Nervatura\UiReport $var
     * @return $this
     */
    public function setUiReport($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\UiReport::class);
        $this->writeOneof(31, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nervatura.UiUserconfig ui_userconfig = 32;</code>
     * @return \Nervatura\UiUserconfig
     */
    public function getUiUserconfig()
    {
        return $this->readOneof(32);
    }

    public function hasUiUserconfig()
    {
        return $this->hasOneof(32);
    }

    /**
     * Generated from protobuf field <code>.nervatura.UiUserconfig ui_userconfig = 32;</code>
     * @param \Nervatura\UiUserconfig $var
     * @return $this
     */
    public function setUiUserconfig($var)
    {
        GPBUtil::checkMessage($var, \Nervatura\UiUserconfig::class);
        $this->writeOneof(32, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getValue()
    {
        return $this->whichOneof("value");
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Value::class, \Nervatura\ResponseGet_Value::class);

