<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api.proto

namespace Nervatura;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *RequestUpdate Key->ID keys:
 *- ```id```: Trans and Item *transnumber~rownumber*
 *- ```trans_id```: Trans *transnumber*
 *- ```product_id```: Product *partnumber*
 *- ```movetype```: Valid values: *inventory, tool, plan, head*
 *- ```tool_id```: Tool *serial*
 *- ```place_id```: Place *planumber*
 *
 * Generated from protobuf message <code>nervatura.Movement</code>
 */
class Movement extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>int64 id = 1;</code>
     */
    protected $id = 0;
    /**
     * Reference to [Trans](#trans).id
     *
     * Generated from protobuf field <code>int64 trans_id = 2;</code>
     */
    protected $trans_id = 0;
    /**
     * Date-time
     *
     * Generated from protobuf field <code>string shippingdate = 3;</code>
     */
    protected $shippingdate = '';
    /**
     * Reference to [Groups](#groups).id (only where groupname = 'movetype')
     *
     * Generated from protobuf field <code>int64 movetype = 4;</code>
     */
    protected $movetype = 0;
    /**
     * Reference to [Product](#product).id
     *
     * Generated from protobuf field <code>int64 product_id = 5;</code>
     */
    protected $product_id = null;
    /**
     * Reference to [Tool](#tool).id
     *
     * Generated from protobuf field <code>int64 tool_id = 6;</code>
     */
    protected $tool_id = null;
    /**
     * Reference to [Place](#place).id
     *
     * Generated from protobuf field <code>int64 place_id = 7;</code>
     */
    protected $place_id = null;
    /**
     * Generated from protobuf field <code>double qty = 8;</code>
     */
    protected $qty = 0.0;
    /**
     * Generated from protobuf field <code>string description = 9;</code>
     */
    protected $description = '';
    /**
     * Generated from protobuf field <code>bool shared = 10;</code>
     */
    protected $shared = false;
    /**
     * Movement meta data
     *
     * Generated from protobuf field <code>repeated .nervatura.MetaData metadata = 16;</code>
     */
    private $metadata;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $id
     *     @type int|string $trans_id
     *           Reference to [Trans](#trans).id
     *     @type string $shippingdate
     *           Date-time
     *     @type int|string $movetype
     *           Reference to [Groups](#groups).id (only where groupname = 'movetype')
     *     @type int|string $product_id
     *           Reference to [Product](#product).id
     *     @type int|string $tool_id
     *           Reference to [Tool](#tool).id
     *     @type int|string $place_id
     *           Reference to [Place](#place).id
     *     @type float $qty
     *     @type string $description
     *     @type bool $shared
     *     @type \Nervatura\MetaData[]|\Google\Protobuf\Internal\RepeatedField $metadata
     *           Movement meta data
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Api::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>int64 id = 1;</code>
     * @return int|string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Generated from protobuf field <code>int64 id = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkInt64($var);
        $this->id = $var;

        return $this;
    }

    /**
     * Reference to [Trans](#trans).id
     *
     * Generated from protobuf field <code>int64 trans_id = 2;</code>
     * @return int|string
     */
    public function getTransId()
    {
        return $this->trans_id;
    }

    /**
     * Reference to [Trans](#trans).id
     *
     * Generated from protobuf field <code>int64 trans_id = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTransId($var)
    {
        GPBUtil::checkInt64($var);
        $this->trans_id = $var;

        return $this;
    }

    /**
     * Date-time
     *
     * Generated from protobuf field <code>string shippingdate = 3;</code>
     * @return string
     */
    public function getShippingdate()
    {
        return $this->shippingdate;
    }

    /**
     * Date-time
     *
     * Generated from protobuf field <code>string shippingdate = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setShippingdate($var)
    {
        GPBUtil::checkString($var, True);
        $this->shippingdate = $var;

        return $this;
    }

    /**
     * Reference to [Groups](#groups).id (only where groupname = 'movetype')
     *
     * Generated from protobuf field <code>int64 movetype = 4;</code>
     * @return int|string
     */
    public function getMovetype()
    {
        return $this->movetype;
    }

    /**
     * Reference to [Groups](#groups).id (only where groupname = 'movetype')
     *
     * Generated from protobuf field <code>int64 movetype = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setMovetype($var)
    {
        GPBUtil::checkInt64($var);
        $this->movetype = $var;

        return $this;
    }

    /**
     * Reference to [Product](#product).id
     *
     * Generated from protobuf field <code>int64 product_id = 5;</code>
     * @return int|string
     */
    public function getProductId()
    {
        return isset($this->product_id) ? $this->product_id : 0;
    }

    public function hasProductId()
    {
        return isset($this->product_id);
    }

    public function clearProductId()
    {
        unset($this->product_id);
    }

    /**
     * Reference to [Product](#product).id
     *
     * Generated from protobuf field <code>int64 product_id = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setProductId($var)
    {
        GPBUtil::checkInt64($var);
        $this->product_id = $var;

        return $this;
    }

    /**
     * Reference to [Tool](#tool).id
     *
     * Generated from protobuf field <code>int64 tool_id = 6;</code>
     * @return int|string
     */
    public function getToolId()
    {
        return isset($this->tool_id) ? $this->tool_id : 0;
    }

    public function hasToolId()
    {
        return isset($this->tool_id);
    }

    public function clearToolId()
    {
        unset($this->tool_id);
    }

    /**
     * Reference to [Tool](#tool).id
     *
     * Generated from protobuf field <code>int64 tool_id = 6;</code>
     * @param int|string $var
     * @return $this
     */
    public function setToolId($var)
    {
        GPBUtil::checkInt64($var);
        $this->tool_id = $var;

        return $this;
    }

    /**
     * Reference to [Place](#place).id
     *
     * Generated from protobuf field <code>int64 place_id = 7;</code>
     * @return int|string
     */
    public function getPlaceId()
    {
        return isset($this->place_id) ? $this->place_id : 0;
    }

    public function hasPlaceId()
    {
        return isset($this->place_id);
    }

    public function clearPlaceId()
    {
        unset($this->place_id);
    }

    /**
     * Reference to [Place](#place).id
     *
     * Generated from protobuf field <code>int64 place_id = 7;</code>
     * @param int|string $var
     * @return $this
     */
    public function setPlaceId($var)
    {
        GPBUtil::checkInt64($var);
        $this->place_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>double qty = 8;</code>
     * @return float
     */
    public function getQty()
    {
        return $this->qty;
    }

    /**
     * Generated from protobuf field <code>double qty = 8;</code>
     * @param float $var
     * @return $this
     */
    public function setQty($var)
    {
        GPBUtil::checkDouble($var);
        $this->qty = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string description = 9;</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Generated from protobuf field <code>string description = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool shared = 10;</code>
     * @return bool
     */
    public function getShared()
    {
        return $this->shared;
    }

    /**
     * Generated from protobuf field <code>bool shared = 10;</code>
     * @param bool $var
     * @return $this
     */
    public function setShared($var)
    {
        GPBUtil::checkBool($var);
        $this->shared = $var;

        return $this;
    }

    /**
     * Movement meta data
     *
     * Generated from protobuf field <code>repeated .nervatura.MetaData metadata = 16;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    /**
     * Movement meta data
     *
     * Generated from protobuf field <code>repeated .nervatura.MetaData metadata = 16;</code>
     * @param \Nervatura\MetaData[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setMetadata($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Nervatura\MetaData::class);
        $this->metadata = $arr;

        return $this;
    }

}

